<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>enable smoke test for vRacksystem repo</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.19.0">
      <projectUrl>https://github.com/InfraSIM/vracksystem.git/</projectUrl>
      <displayName></displayName>
    </com.coravy.hudson.plugins.github.GithubProjectProperty>
  </properties>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.4">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <name>origin</name>
        <refspec>+refs/heads/*:refs/remotes/origin/* +refs/pull/*:refs/remotes/origin/pr/*</refspec>
        <url>https://github.com/InfraSIM/vracksystem.git</url>
        <credentialsId>5200afae-5e24-4118-93e1-415394ab8797</credentialsId>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>origin/master</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>${sha1}</name>
      </hudson.plugins.git.BranchSpec>
      <hudson.plugins.git.BranchSpec>
        <name>$GIT_REFSPEC</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions>
      <hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
        <relativeTargetDir>vracksystem</relativeTargetDir>
      </hudson.plugins.git.extensions.impl.RelativeTargetDirectory>
      <hudson.plugins.git.extensions.impl.LocalBranch>
        <localBranch>master</localBranch>
      </hudson.plugins.git.extensions.impl.LocalBranch>
      <hudson.plugins.git.extensions.impl.WipeWorkspace/>
      <hudson.plugins.git.extensions.impl.PathRestriction>
        <includedRegions></includedRegions>
        <excludedRegions></excludedRegions>
      </hudson.plugins.git.extensions.impl.PathRestriction>
      <hudson.plugins.git.extensions.impl.DisableRemotePoll/>
    </extensions>
  </scm>
  <assignedNode>vracksystem_deploy</assignedNode>
  <canRoam>false</canRoam>
  <disabled>true</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <org.jenkinsci.plugins.ghprb.GhprbTrigger plugin="ghprb@1.31.4">
      <spec>H/2 * * * *</spec>
      <latestVersion>3</latestVersion>
      <configVersion>3</configVersion>
      <adminlist></adminlist>
      <allowMembersOfWhitelistedOrgsAsAdmin>false</allowMembersOfWhitelistedOrgsAsAdmin>
      <orgslist></orgslist>
      <cron>H/2 * * * *</cron>
      <buildDescTemplate></buildDescTemplate>
      <onlyTriggerPhrase>false</onlyTriggerPhrase>
      <useGitHubHooks>false</useGitHubHooks>
      <permitAll>false</permitAll>
      <whitelist></whitelist>
      <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
      <displayBuildErrorsOnDownstreamBuilds>true</displayBuildErrorsOnDownstreamBuilds>
      <whiteListTargetBranches>
        <org.jenkinsci.plugins.ghprb.GhprbBranch>
          <branch></branch>
        </org.jenkinsci.plugins.ghprb.GhprbBranch>
      </whiteListTargetBranches>
      <gitHubAuthId>c8c8b1ae-2bbc-47d1-9587-a3ea5851e766</gitHubAuthId>
      <triggerPhrase></triggerPhrase>
      <extensions>
        <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
          <messages>
            <org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
              <message></message>
              <result>SUCCESS</result>
            </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildResultMessage>
          </messages>
        </org.jenkinsci.plugins.ghprb.extensions.comments.GhprbBuildStatus>
        <org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
          <commitStatusContext>Jenkins</commitStatusContext>
          <triggeredStatus></triggeredStatus>
          <startedStatus></startedStatus>
          <statusUrl></statusUrl>
          <addTestResults>false</addTestResults>
        </org.jenkinsci.plugins.ghprb.extensions.status.GhprbSimpleStatus>
      </extensions>
    </org.jenkinsci.plugins.ghprb.GhprbTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project>hawk</project>
      <filter>tools/ova_builder/*.ova</filter>
      <target>ova_folder</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.plugins.copyartifact.CopyArtifact plugin="copyartifact@1.38">
      <project></project>
      <filter>tools/ova_builder/*.ova</filter>
      <target>ova_folder</target>
      <excludes></excludes>
      <selector class="hudson.plugins.copyartifact.StatusBuildSelector">
        <stable>true</stable>
      </selector>
      <flatten>true</flatten>
      <doNotFingerprintArtifacts>true</doNotFingerprintArtifacts>
    </hudson.plugins.copyartifact.CopyArtifact>
    <hudson.tasks.Shell>
      <command>#!/bin/bash
echo &quot;start to get the latest codes&quot;
if [ -d vracksystem ];then
    pushd vracksystem
    echo &quot;show the latest 5commits of vracksystem:&quot;
    git log --no-merges -n 5 | grep &quot;^commit &quot; | awk &apos;{print $2}&apos;
    popd
else
    echo &quot;fails to clone vracksystem repo&quot;
    exit 1
fi

echo &quot;update test repo&quot;
if [ -d test ];then 
	pushd test
    git pull https://emcinfrasim:DoNotChangeMe2015@github.com/InfraSIM/test.git
    popd
else
    git clone https://emcinfrasim:DoNotChangeMe2015@github.com/InfraSIM/test.git
fi

echo &quot;source code is ready for build&quot;</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

echo &quot;restart vracksystem to apply the updates&quot;
# &quot;tcp        0      0 0.0.0.0:8888            0.0.0.0:*               LISTEN      17518/python&quot;
pid=`netstat -anp | grep 0.0.0.0:8888 | awk {&apos;print $7&apos;} | awk -F &apos;/&apos; &apos;{print $1}&apos;`
echo $pid
if [ -n $pid ]; then
    sudo kill -9 $pid
else
    echo &quot;can&apos;t find the process via 8888 port&quot;
fi

[ -f test.json ] &amp;&amp; rm -f test.json
cp test_config/conf.xml test/
cp test_config/stack_requirement.json test/configure/
ova_files=`ls ova_folder | grep \.ova`
echo &quot;OVA files: $ova_files&quot;
cp ova_folder/* vracksystem/ova/

pushd vracksystem
python manage.py runserver 0.0.0.0:8888 2&gt;&amp;1 &amp;
popd
sleep 5

pushd test/utilities/
python Util_Manipulate.py stack_requirement.json -l $ova_files -d 0
popd

rm -f /vracksystem/ova/*
rm -rf ova_folder</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers>
    <hudson.tasks.ArtifactArchiver>
      <artifacts>test.json</artifacts>
      <allowEmptyArchive>false</allowEmptyArchive>
      <onlyIfSuccessful>false</onlyIfSuccessful>
      <fingerprint>false</fingerprint>
      <defaultExcludes>true</defaultExcludes>
      <caseSensitive>true</caseSensitive>
    </hudson.tasks.ArtifactArchiver>
  </publishers>
  <buildWrappers>
    <hudson.plugins.timestamper.TimestamperBuildWrapper plugin="timestamper@1.7.4"/>
    <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
      <colorMapName>xterm</colorMapName>
    </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
  </buildWrappers>
</project>